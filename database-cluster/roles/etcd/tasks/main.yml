---
- name: Set etcd_initial_cluster fact
  ansible.builtin.set_fact:
    etcd_initial_cluster: >
      {%- set initial_cluster = [] -%}
      {%- for host in groups['etcd'] -%}
        {%- set _ = initial_cluster.append(host ~ '=http://' ~ hostvars[host].ansible_host ~ ':2380') -%}
      {%- endfor -%}
      {{ initial_cluster | join(',') }}
- name: Download etcd binary
  ansible.builtin.get_url:
    url: "{{ download_url }}/{{ etcd_version }}/etcd-{{ etcd_version }}-linux-amd64.tar.gz"
    dest: "/tmp/etcd-{{ etcd_version }}-linux-amd64.tar.gz"

- name: Extract etcd binary
  ansible.builtin.unarchive:
    src: "/tmp/etcd-{{ etcd_version }}-linux-amd64.tar.gz"
    dest: "/tmp"
    remote_src: true

- name: Move etcd binaries to /usr/bin
  ansible.builtin.shell: |
    mv /tmp/etcd-{{ etcd_version }}-linux-amd64/etcd /usr/bin
    mv /tmp/etcd-{{ etcd_version }}-linux-amd64/etcdctl /usr/bin
    mv /tmp/etcd-{{ etcd_version }}-linux-amd64/etcdutl /usr/bin
  become: true
# this is required to be edit to add nodes in hosts file
- name: Generate /tmp/hosts_block_content on the control node
  ansible.builtin.template:
    src: hosts_block_template.j2
    dest: /tmp/hosts_block_content
    mode: '0644'
  delegate_to: localhost  # Ensure this runs on the control node
  
- name: Copy the generated block content to remote hosts
  ansible.builtin.copy:
    src: /tmp/hosts_block_content
    dest: /tmp/hosts_block_content
    mode: '0644'
  become: true
- name: Ensure /etc/hosts contains the cluster nodes
  ansible.builtin.blockinfile:
    path: /etc/hosts
    block: "{{ lookup('file', '/tmp/hosts_block_content') }}"
    marker: "# BEGIN ANSIBLE MANAGED BLOCK"
    create: yes
    state: present
    insertafter: "# BEGIN ANSIBLE MANAGED BLOCK"
    backup: yes
  become: true
########################

 
- name: Set ownership of etcd binaries
  ansible.builtin.file:
    path: "{{ etcd_bin_dir }}/{{ item }}"
    owner: root
    group: root
    mode: '0755'
  loop:
    - etcd
    - etcdctl
    - etcdutl
  become: true

- name: Remove temporary files
  ansible.builtin.file:
    path: "/tmp/etcd-{{ etcd_version }}-linux-amd64"
    state: absent
  become: true

- name: Create etcd user
  ansible.builtin.user:
    name: "{{ etcd_user }}"
    system: true
    create_home: no
    state: present
  become: true

- name: Create etcd directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ etcd_user }}"
    group: "{{ etcd_user }}"
  loop:
    - "{{ etcd_conf_dir }}"
    - "{{ etcd_data_dir }}"
  become: true

- name: Deploy etcd configuration file
  ansible.builtin.template:
    src: etcd.conf.yml.j2
    dest: "{{ etcd_conf_file }}"
    owner: "{{ etcd_user }}"
    group: "{{ etcd_user }}"
    mode: '0644'

- name: Create etcd systemd service file
  ansible.builtin.template:
    src: etcd.service.j2
    dest: /usr/lib/systemd/system/etcd.service
    owner: root
    group: root
    mode: '0644'
  become: true

- name: Reload systemd manager configuration
  ansible.builtin.systemd:
    daemon_reload: true
  become: true

- name: Enable and start etcd service
  ansible.builtin.systemd:
    name: etcd
    enabled: true
    state: started
  become: true
